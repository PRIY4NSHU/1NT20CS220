import requests
from flask import Flask, request, jsonify
import asyncio
import aiohttp

app = Flask(__name__)

async def fetch_numbers(url):
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url, timeout=5) as response:
                data = await response.json()
                return data.get('numbers', [])
    except:
        return []

@app.route('/numbers', methods=['GET'])
def get_numbers():
    urls = request.args.getlist('url')

    async def fetch_all():
        tasks = [fetch_numbers(url) for url in urls]
        results = await asyncio.gather(*tasks)
        return results

    loop = asyncio.get_event_loop()
    results = loop.run_until_complete(fetch_all())

    merged_numbers = sorted(set(number for sublist in results for number in sublist))

    return jsonify({'numbers': merged_numbers})

if __name__ == '__main__':
    app.run(port=8008)
